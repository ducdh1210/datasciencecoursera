x.class()
class(x)
x <- c(4, "a", TRUE
x
x <- c(4, "a", TRUE)
x
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x,y)
x <- 1:4
y <- 2
x+ y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10] <- 4
x
data <- read.table('hw1_data.csv')
data <- read.table('hw1_data.csv')
data <- read.table('hw1_data.csv')
data <- read.table('hw1_data.csv')
data <- read.csv('hw1_data.csv')
data
data[1:]
dim(data)
mean(data)
x[1,]
data[1,]
data[,1]
data[,1]!=NA
data[,1]
bad <- is.na(data[,1])
data[,1]
data[,1][!bad]
mean(data[,1][!bad])
data[,1]
data[1,]
data[1,][>31]
data[1,][data > 31]
data[data> 31]
data[1,]
data[,1][data>31]
data[,1]
data[,1>31]
data[,1>31;,5>90]
data[,1>31;][,5>40]
data[data[,1]>40]
data
data[data[,1]]
data[ data[,1]>40 ]
data[ data[,1] > 40 ]
dim(data)
data[1]
data[ data[,2] > 40 ]
data[1]>40
data[data[1]>40]
data[data[1,]>40]
data[data[,1]>40]
data[data[1,]>40]
data[1]
data[1]>40
data[,1]
data[1,]
data[,1]>40
data[data[,1]>40]
data[(data[,1]>40)]
m = c(data)
m
dim(c)
dim(m)
class(m)
class(data)
m <- 1:10
class(m)
x <- matrix(1:6, 2, 3)
class(x)
x
m = matrix(data)
m
subset_1 <- subset (data, Ozone>41)
subset_1
subset_1 <- subset (data, Ozone>11 & Temop>90 )
subset_1 <- subset (data, Ozone>11 & Temp>90 )
subset_1
subset_1[,2]
mean(subset_1[,2])
subset_2 <- subset (data, Month == 6)
subset_2
mean(subset_2[,5])
mean(subset_2[,4])
subset_3 <- subset (data, Month == 5)
max(subset_3[,1])
subset_3
subset_3[,1]
max(subset_3[,1])
subset_3 <- subset (data, Month == 5, Ozone != NA)
subset_3 <- subset (data, Month == 5, Ozone >0)
subset_3
subset_3 <- subset (data, Month == 5, Ozone >10)
subset_3
subset_3 <- subset (data, Month == 5)
subset_3
subset_3 <- subset (data, Month == 5 & Ozone != NA)
subset_3
subset_3 <- subset (data, Month == 5 & Ozone == 41)
subset_3
subset_3 <- subset (data, Month == 5 & Ozone > 0)
subset_3
subset_3 <- subset (data, Month == 5 & Ozone > 0)
max(subset_3)
max(subset_3[,1])
getwd()
setwd("./Data_Science/Class_3")
setwd("../Data_Science/Class_3")
getwd()
setwd("../Data_Science/Class_3")
getwd()
download.file(fileUrl, destfile = "./Class_3/housing.csv",method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "../Class_3/housing.csv",method = "curl")
list.files(../Class_3)
list.files(./Class_3)
list.files(Class_3)
list.files()
list.files()
dateDownloaded
dateDownloaded <- date()
dateDownloaded
list.files()
housingData
housingData <- read.table("housing.csv")
housingData
head(housingData)
head(housingData)
housingData[1]
#housingData <- read.table("housing.csv", sep=",", header = TRUE)
head(housingData)
#head(housingData)
housingData[1]
dim(housingData)
housingData['RT']
housingData[1:2]
housingData[1,]
housingData[3,]
housingData <- read.table("housing.csv", sep=",", header = TRUE)
housingData[1,]
housingData[2]
housingData[1,]
dim(housingData)
housingData[,1]
housingData[,2]
testSubset <- subset(housingData,PUMA>1000)
testSubset[,2]
testSubset
testSubset[,1]
testSubset[,2]
testSubset[,3]
testSubset <- subset(housingData,PUMA>100)
testSubset[,2]
testSubset[,4]
houseValueSubset <- subset(housingValue, VAL>1000000)
houseValueSubset <- subset(housing, VAL>1000000)
houseValueSubset <- subset(housingData, VAL>1000000)
dim(houseValueSubet)
dim(houseValueSubset)
houseValueSubset
houseValueSubset <- subset(housingData, VAL>=24)
houseValueSubset
dim(houseValueSubset)
dim(houseValueSubset)
class(houseValueSubset)
grep("VAL",colnames(houseValueSubset))
mean(houseValueSubset[,37])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile="../Class_3/gas.xlsx",method="curl")
library(xlsx)
library(xlsx)
gasData <- read.xlsx("gas.xlsx",sheetIndex=1,header=TRUE)
install.packages("xlsx")
library(xlsx)
gasData <- read.xlsx("gas.xlsx",sheetIndex=1,header=TRUE)
class(gasData)
gasData
colIndex <- 7:15
rowIndex <- 18:23
dat <- read.xlsx("gas.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
date
dat
sum(dat$Zip*dat$Ext,na.rm=T)
na.rm
dat(na.rm=T)
dat[na.rm=T]
dat$Zip
sum(na.rm=T)
80120*456
sum(dat$Zip*dat$Ext)
library(XML)
install.packages("XML")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=True)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=True)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=True)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <-xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names["rootNode"]
names("rootNode")
rootNode
rootNode[[1]]
rootNode[[[1]]]
rootNode[[1]]
rootNode[[1]][1]
rootNode[1][1]
rootNode[1][1][1]
rootNode[1][1][1]
rootNode[1][1][1][1]
rootNode[1][1][1][1][1]
rootNode[[[1]]]
rootNode[[1]]
rootNode[[1]][1]
rootNode[[1]][2]
rootNode[[1]][1][2]
rootNode[[1]][1][3]
rootNode[[1]][1][8]
xpathApply(rootNode,"//zipcode",xmlValue)
xpathApply(rootNode,"//zipcode"=21231,xmlValue)
testList = xpathApply(rootNode,"//zipcode",xmlValue)
class(testList)
dim(testList)
testlist
testList
testList[testList==21211]
testList
testList[testList==21211]
testList
dim(testList)
length(testList)
length(testList[testList==21211])
length(testList[testList==21231])
help -fread
help --fread
help fread
comTable = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
comTable <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
require(data.table)
comTable <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
comTable <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
install.packages("data.table")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
comTable <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
comTable <- fread("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
comTable
dim(table)
class(comTable)
tables()
comTable[2,]
comTable[comTable==pwgtp15]
comTable[comTable$pwgtp15==155]
mean(DT$pwgtp15,by=DT$SEX)
DT = comTable
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
DT[DT$pwgtp15]
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
Dt
DT
head(DT,3)
DT[DT$y=="a"]
DT[DT$y=="a",]
DT[c(2,3)]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); system.time()
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15);
DT = comTable
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15);
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); system.time()
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
start <- Sys.time()
start
start <- Sys.time(); mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*1000
start <- Sys.time();mean(DT$pwgtp15,by=DT$SEX); end <- Sys.time(); (end-start)*1000
start <- Sys.time();mean(DT$pwgtp15,by=DT$SEX); end <- Sys.time(); (end-start)*100000
start <- Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*100000
start <- Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*100000
start <- Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*100000
start <- Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*100000
start <- Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*100000
start <- Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*100000
start <- Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15); end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();tapply(DT$pwgtp15,DT$SEX,mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]; end <- Sys.time(); (end-start)*100000
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
start <- Sys.time();sapply(split(DT$pwgtp15,DT$SEX),mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();sapply(split(DT$pwgtp15,DT$SEX),mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();sapply(split(DT$pwgtp15,DT$SEX),mean); end <- Sys.time(); (end-start)*100000
start <- Sys.time();sapply(split(DT$pwgtp15,DT$SEX),mean); end <- Sys.time(); (end-start)*100000
mean(DT$pwgtp15,by=DT$SEX)
mean(DT$pwgtp15,by=DT$SEX)
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
start <- Sys.time();DT[,mean(pwgtp15),by=SEX]; end <- Sys.time(); (end-start)*100000
print (i)
print(i)
}
}
print(x[i])
}
print(x[i]);
x
setwd("~/Desktop/Coursera/Data_Science/datasciencecoursera/Class_2")
setwd("~/Desktop/Coursera/Data_Science/datasciencecoursera/Class_3")
x <- c("a","b","c","d")
x
for (i in 1:4){
print(x[i])
}
for (i in 1:4){
print(x[i])
}
for (i in 1:4){
print(x[i])
}
x <- c("a","b","c","d")
for (i in 1:4){
print(x[i])
}
for (i in seq_along(x)){
print(x[i])
}
for(letter in x) {
print(letter)
}
for(i in 1:4) print(x[i])
for (i in 1:4){
print(x[i])
}
for (i in seq_along(x)){
print(x[i])
}
for(letter in x) {
print(letter)
}
for(i in 1:4) print(x[i])
z <- 5
while (z>=3 && z <=10){
print(z)
coin <- rbinom(1,1,0.5)
if (coin == 1){
z <- z+1
}else{
z <- z -1
}
}
x0 <- 1
tol <- 1e-8
repeat{
x1 <- computeEstimate()
if (abs(x1-x0) < tol){
break
}else{
x0 <- x1
}
}
mydata <- rnorm(100)
sd(mydata)
formals(sd)
sd(mydata)
sd(x=mydata)
sd(x=mydata,na.rm=FALSE)
lm(y-x, mydata, 1:100, model=False)
increment <- function(x){
x <- x + 1
}
increment(x=3)
increment <- function(x){
x <- x + 1
}
y = increment(x=3)
print(y)
paste("a","b", sep=":")
x = c(1,2,3,3,4)
x
x>10
x = c(1,12,23,3,34)
x
use <- x>10
use
x[use]
dim(use)
length(use)
x
x[2]
x[1:2]
x[TRUE FALSE TRUE]
x[0 1 0 1]
x[0;1;0;1]
x[x>10]
class(x>10)
class(use)
x>10
class(x[x>10])
class(x)
use = c(0,1,1,0)
x[use]
use = c(0,1,1,0,1,1)
x[use]
x
use = c(0,1,4,0,2,1)
x[use]
x > 10
use = c[0,1,2,0,4]
use = c(0,1,2,0,4)
x[use]
use = c(0,2,3,0,5)
x[use]
class(use)
k = TRUE
class(k)
as.logical(use)
above <- function(x, n=10){
use <- x>n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n=10){
use <- x>n
x[use]
}
x <- 1:20
above(x)
columnmean <- funtion(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i]  <- mean(y[,i])
}
means
}
columnmean <- funtion(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i]  <- mean(y[,i])
}
means
}
columnmean <- funtion(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i]  <- mean(y[,i])
}
means
}
columnmean <- funtion(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i]  <- mean(y[,i])
}
means
}
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i]  <- mean(y[,i])
}
means
}
test_matrix = matrix(data=1:20, nrow=5)
test_matrix
columnmean(test_matrix)
setwd("~/Desktop/Coursera/Data_Science/datasciencecoursera/Class_2")
lm <- function(x){x*x}
lm(2)
lm
search()
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
cube <- make.power(3)
cube(2)
ls(enviroment(cube))
ls(environment(cube))
rep(10,4)
y <- matrix(rep(10,4),2)
y
